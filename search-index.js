crystal_doc_search_index_callback({"repository_name":"github.com/TheEEs/alizarin","body":"![alizarin.png](https://www.upsieutoc.com/images/2020/03/29/alizarin.png)\n\n# Alizarin\n![GitHub release (latest by date)](https://img.shields.io/github/v/release/TheEEs/alizarin?style=flat-square)\n![LICENSE MIT](https://img.shields.io/badge/license-MIT-green?style=flat-square)\n![CRYSTAL 0.33.0](https://img.shields.io/badge/crystal-0.33.0-orange?style=flat-square)\n![webkit2gtk](https://img.shields.io/badge/webkit2gtk-4.0-blue?style=flat-square)\n\n\n**Alizarin** is a Crystal shard that helps you build Linux GUI applications using Web Technologies (HTML5, CSS3, JavaScript). This shard also provides ability to extend JavaScript code with native functionalities.\n\n## Installation\n\n* Add the dependency to your `shard.yml`:\n```yaml\n   dependencies:\n     alizarin:\n       github: TheEEs/alizarin\n```\n* Run `shards install`\n\nNOTE: This shard requires `libwebkit2gtk-4.0` to be installed. Makes sure you have it installed into your system.\n\n```shell\n    $ sudo apt-get install -y libwebkit2gtk-4.0\n```\n\n## Usage\n\n```crystal\nrequire \"alizarin\"\n```\n\n* Open a browser window and load [Crystal Offical Website](https://crystal-lang.org/)\n```crystal \n  require \"alizarin\"\n  require \"colorize\"\n\n  webview = WebView.new \n\n  webview.on_close |webview|\n    puts \"#{webview} is going to close\".colorize :green\n    exit 0\n  end\n\n  webview.default_size 800, 600\n  webview.load_url \"https://crystal-lang.org/\n\n  webview.run\n\n```\n\n* Show WebInspector (in case if you want to play with page's source code)\n\n```crystal \n  webview[\"enable-developer-extras\"] = true\n  webview.show_inspector\n```\n\n\nNOTE: There is also a simple test case located in `/spec` folder. This test opens a browser window, loads [Crystal Offical Website](https://crystal-lang.org/) then writes page `body.innerHTML` into a file called `./htmlBody.txt`.\n\nTo run test case, types:\n```shell\n$ git clone https://github.com/TheEEs/alizarin\n$ cd alizarin\n$ make\n$ crystal spec\n```\n\nSee [Alizarin API](https://theees.github.io/alizarin-docs/) for more.\n\n## Development\n\nTODO: Write Development instructions here.\n\n\n## Contributing\n\n1. Fork it [https://github.com/TheEEs/alizarin/fork](https://github.com/TheEEs/alizarin/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [TheEEs](https://github.com/TheEEs) - creator and maintainer\n","program":{"html_id":"github.com/TheEEs/alizarin/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/TheEEs/alizarin","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/TheEEs/alizarin/JSCContext","path":"JSCContext.html","kind":"module","full_name":"JSCContext","name":"JSCContext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsc_context.cr","line_number":2,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_context.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"JSCContext represents a JavaScript execution context","summary":"<p>JSCContext represents a JavaScript execution context</p>","class_methods":[{"id":"get_value(name:String)-class-method","html_id":"get_value(name:String)-class-method","name":"get_value","doc":"Equivalent to JavaScript `window[name]`\n\n```\njson = JSCContext.get_value \"JSON\"\n# Do somethings with JSON object, e.g: json[\"parse\"].call(JSCPrimative.new \"{a:2}\")\n```","summary":"<p>Equivalent to JavaScript <code>window[name]</code></p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_context.cr#L30","def":{"name":"get_value","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = JSC.context_get_value(@@context, name)\nif JSC.is_function(v)\n  JSCFunction.new(v)\nelse\n  if JSC.is_object(v)\n    JSCObject.new(v)\n  else\n    JSCPrimative.new(v)\n  end\nend\n"}},{"id":"set_value(name:String,value:JSCPrimative|JSCFunction|JSCObject)-class-method","html_id":"set_value(name:String,value:JSCPrimative|JSCFunction|JSCObject)-class-method","name":"set_value","doc":"Set a property of the context's global object, in this case `window`\n\n```\nJSCContext.set_value \"hello\", JSCPrimative.new \"world\"\n```","summary":"<p>Set a property of the context's global object, in this case <code>window</code></p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"args_string":"(name : String, value : JSCPrimative | JSCFunction | JSCObject)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_context.cr#L20","def":{"name":"set_value","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.context_set_value(@@context, name, value)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/TheEEs/alizarin/JSCFunction","path":"JSCFunction.html","kind":"struct","full_name":"JSCFunction","name":"JSCFunction","abstract":false,"superclass":{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"},{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/TheEEs/alizarin/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/TheEEs/alizarin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsc_function.cr","line_number":2,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_function.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"JSCFunction represents a JavaScript's native function(a function that run native code instead of javascript).","summary":"<p>JSCFunction represents a JavaScript's native function(a function that run native code instead of javascript).</p>","class_methods":[{"id":"raise(message:String)-class-method","html_id":"raise(message:String)-class-method","name":"raise","doc":"Raises a JavaScript Error with given `message`.","summary":"<p>Raises a JavaScript Error with given <code>message</code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_function.cr#L84","def":{"name":"raise","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.throw_exception(JSCPrimative.global_context, message)"}}],"constructors":[{"id":"new(func:Array(JSCPrimative|JSCFunction|JSCObject)->_,name:String?=nil)-class-method","html_id":"new(func:Array(JSCPrimative|JSCFunction|JSCObject)-&gt;_,name:String?=nil)-class-method","name":"new","doc":"Initializes a JavaScript native function.\nFor short, uses `WebExtension.function` macro instead.\n\nNOTE: **IMPORTANT**. Does not directly use parameter as return value. The following code won't work.\n```\nWebExtension.function params do\n  params.first # => Directly returns function parameter(s) is not recommended and may crash program\nend","summary":"<p>Initializes a JavaScript native function.</p>","abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"(Array(JSCPrimative | JSCFunction | JSCObject) -> _)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(func : Array(JSCPrimative | JSCFunction | JSCObject) -> _, name : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_function.cr#L24","def":{"name":"new","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"(Array(JSCPrimative | JSCFunction | JSCObject) -> _)"},{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(func, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(*args)-instance-method","html_id":"call(*args)-instance-method","name":"call","doc":"Calls the function.\n\nE.g:\n```\nsum_function.call JSCPrimative.new(1), JSCPrimative.new(2)\n```","summary":"<p>Calls the function.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_function.cr#L65","def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"first_arg = Pointer(JSC::JSValue).malloc(args.size)\nargs.size.times do |i|\n  (first_arg + i).value = args[i].to_unsafe\nend\nret = JSC.invoke_function(@value, args.size, first_arg)\nreturn case JSC\nwhen .is_object(ret)\n  JSCObject.new(ret)\nwhen .is_function(ret)\n  JSCFunction.new(ret)\nelse\n  JSCPrimative.new(ret)\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/TheEEs/alizarin/JSCFunction/CallBack","path":"JSCFunction/CallBack.html","kind":"alias","full_name":"JSCFunction::CallBack","name":"CallBack","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"jsc_function.cr","line_number":7,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_function.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":true,"aliased":"Proc(Array(JSCFunction | JSCObject | JSCPrimative), (JSCFunction | JSCObject | JSCPrimative))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/TheEEs/alizarin/JSCFunction","kind":"struct","full_name":"JSCFunction","name":"JSCFunction"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/TheEEs/alizarin/JSCObject","path":"JSCObject.html","kind":"struct","full_name":"JSCObject","name":"JSCObject","abstract":false,"superclass":{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"},{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/TheEEs/alizarin/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/TheEEs/alizarin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsc_object.cr","line_number":2,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_object.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A JSCObject represent a JavaScript object","summary":"<p>A JSCObject represent a JavaScript object</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes a new JSCObject","summary":"<p>Initializes a new JSCObject</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_object.cr#L13","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/TheEEs/alizarin/JSCPrimative","path":"JSCPrimative.html","kind":"struct","full_name":"JSCPrimative","name":"JSCPrimative","abstract":false,"superclass":{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"},{"html_id":"github.com/TheEEs/alizarin/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/TheEEs/alizarin/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/TheEEs/alizarin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"jsc_primative.cr","line_number":8,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A JSCPrimative is a wrapper of 6 JavaScript primative types, includes:\n1. undefined\n2. null\n3. boolean\n4. number\n5. string\n6. array","summary":"<p>A JSCPrimative is a wrapper of 6 JavaScript primative types, includes: 1.</p>","class_methods":[],"constructors":[{"id":"new(value:Int)-class-method","html_id":"new(value:Int)-class-method","name":"new","doc":"Initializes a new JavaScript number from a Crystal's Int","summary":"<p>Initializes a new JavaScript number from a Crystal's Int</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L25","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value:Float64)-class-method","html_id":"new(value:Float64)-class-method","name":"new","doc":"Initializes a new JavaScript number from a Crystal's Float64","summary":"<p>Initializes a new JavaScript number from a Crystal's Float64</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L30","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value:String)-class-method","html_id":"new(value:String)-class-method","name":"new","doc":"Initializes a new JavaScript string from a Crystal's String","summary":"<p>Initializes a new JavaScript string from a Crystal's String</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(value : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L35","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value:Nil)-class-method","html_id":"new(value:Nil)-class-method","name":"new","doc":"Initializes a new JavaScript null from a Crystal's Nil","summary":"<p>Initializes a new JavaScript null from a Crystal's Nil</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L40","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value:Bool)-class-method","html_id":"new(value:Bool)-class-method","name":"new","doc":"Initializes a new JavaScript boolean from a Crystal's Bool","summary":"<p>Initializes a new JavaScript boolean from a Crystal's Bool</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L45","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes a new JavaScript undefined","summary":"<p>Initializes a new JavaScript undefined</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/jsc_primative.cr#L55","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/TheEEs/alizarin/JSObjectUtils","path":"JSObjectUtils.html","kind":"module","full_name":"JSObjectUtils","name":"JSObjectUtils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"js_object_utils.cr","line_number":2,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/TheEEs/alizarin/JSCFunction","kind":"struct","full_name":"JSCFunction","name":"JSCFunction"},{"html_id":"github.com/TheEEs/alizarin/JSCObject","kind":"struct","full_name":"JSCObject","name":"JSCObject"},{"html_id":"github.com/TheEEs/alizarin/JSCPrimative","kind":"struct","full_name":"JSCPrimative","name":"JSCPrimative"}],"namespace":null,"doc":"This module provides common operations that every JavaScript entity can do","summary":"<p>This module provides common operations that every JavaScript entity can do</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[](name:String)-instance-method","html_id":"[](name:String)-instance-method","name":"[]","doc":"Gets property `name`","summary":"<p>Gets property <code>name</code></p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L14","def":{"name":"[]","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = JSC.get_property(@value, name)\nif JSC.is_function(v)\n  JSCFunction.new(v)\nelse\n  if JSC.is_object(v)\n    JSCObject.new(v)\n  else\n    JSCPrimative.new(v)\n  end\nend\n"}},{"id":"[](index:UInt32)-instance-method","html_id":"[](index:UInt32)-instance-method","name":"[]","doc":"Gets value at index `index`","summary":"<p>Gets value at index <code>index</code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"}],"args_string":"(index : UInt32)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L26","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = JSc.get_at_index(@value, index)\nif JSC.is_function(v)\n  JSCFunction.new(v)\nelse\n  if JSC.is_object(v)\n    JSCObject.new(v)\n  else\n    JSCPrimative.new(v)\n  end\nend\n"}},{"id":"[]=(name:String,value:JSCPrimative|JSCFunction|JSCObject)-instance-method","html_id":"[]=(name:String,value:JSCPrimative|JSCFunction|JSCObject)-instance-method","name":"[]=","doc":"Set property `name`","summary":"<p>Set property <code>name</code></p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"args_string":"(name : String, value : JSCPrimative | JSCFunction | JSCObject)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L4","def":{"name":"[]=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.set_property(@value, name, value.to_unsafe)"}},{"id":"[]=(index:UInt32,value:JSCPrimative|JSCFunction|JSCObject)-instance-method","html_id":"[]=(index:UInt32,value:JSCPrimative|JSCFunction|JSCObject)-instance-method","name":"[]=","doc":"Set a value at index `index`","summary":"<p>Set a value at index <code>index</code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"args_string":"(index : UInt32, value : JSCPrimative | JSCFunction | JSCObject)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L9","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"JSCPrimative | JSCFunction | JSCObject"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.set_at_index(@value, index, value.to_unsafe)"}},{"id":"is_array?-instance-method","html_id":"is_array?-instance-method","name":"is_array?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L53","def":{"name":"is_array?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_array(@value)"}},{"id":"is_bool?-instance-method","html_id":"is_bool?-instance-method","name":"is_bool?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L63","def":{"name":"is_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_bool(@value)"}},{"id":"is_null?-instance-method","html_id":"is_null?-instance-method","name":"is_null?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L38","def":{"name":"is_null?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_null(@value)"}},{"id":"is_number?-instance-method","html_id":"is_number?-instance-method","name":"is_number?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L48","def":{"name":"is_number?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_number(@value)"}},{"id":"is_string?-instance-method","html_id":"is_string?-instance-method","name":"is_string?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L58","def":{"name":"is_string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_string(@value)"}},{"id":"is_undefined?-instance-method","html_id":"is_undefined?-instance-method","name":"is_undefined?","doc":"Perform type checking","summary":"<p>Perform type checking</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L43","def":{"name":"is_undefined?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.is_undefined(@value)"}},{"id":"to_b-instance-method","html_id":"to_b-instance-method","name":"to_b","doc":"Converts JavaScript value to Crystal's `Bool`","summary":"<p>Converts JavaScript value to Crystal's <code>Bool</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L68","def":{"name":"to_b","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.to_bool(@value)"}},{"id":"to_f64-instance-method","html_id":"to_f64-instance-method","name":"to_f64","doc":"Converts JavaScript value to Crystal's `Float64`","summary":"<p>Converts JavaScript value to Crystal's <code>Float64</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L78","def":{"name":"to_f64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.to_float64(@value)"}},{"id":"to_i32-instance-method","html_id":"to_i32-instance-method","name":"to_i32","doc":"Converts JavaScript value to Crystal's `Int32`","summary":"<p>Converts JavaScript value to Crystal's <code>Int32</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L83","def":{"name":"to_i32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"JSC.to_int32(@value)"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Converts JavaScript value to Crystal's `String`","summary":"<p>Converts JavaScript value to Crystal's <code>String</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/js_object_utils.cr#L73","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.new(JSC.to_string(@value))"}}],"macros":[],"types":[]},{"html_id":"github.com/TheEEs/alizarin/WebExtension","path":"WebExtension.html","kind":"module","full_name":"WebExtension","name":"WebExtension","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"web_extension.cr","line_number":40,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_extension.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"According to architecture of WebKit2GTK, JavaScript code runs in a separeted process called Render Process.\nThat's why extending JavaScript can not be done in the same process which manages the `WebView`.\nInstead WebKit2GTK proposes a new way to extend JavaScript with native code called WebExtension.\nA WebExtension is a shared library which will be loaded at runtime by Render Process.\nThis module provides some simple macros to reduce redundant works in making a webExtension.\nThe following code shows an simple example which provides a JS function. It reads given file on filesystem.\n```\nrequire \"alizarin\"\ninclude WebExtension\ninitialize_extension do\n  # code inside this block will be executed when this Web Extension is loaded by Render Process\n  func = function params do\n    if params.size != 1\n      JSCFunction.raise \"#{params.size} parameter(s) provided, expect 1\"\n      JSCPrimative.new # return JavaScript's undefined\n    else\n      path = params.first.to_s\n      JSCPrimative.new(File.read(path)) rescue JSCPrimative.new nil # Return content of file at *path*, otherwise return null\n    end\n  end\n  JSCContext.set_value(\"read_file\", func)\nend\n```\nBuilds shared library:\n```bash\n$ crystal build --single-module --link-flags=\"-shared -fpic\" -o <output-path> <source-file>\n```\nNOTE: The shared library should be placed in the directory provided with `WebView#extension_dir=`\n\nIn main process (which manages an instance of `WebView`), opens WebInspector's console and types:\n```javascript\nread_file(\"/a-file-located-some-where\")\n```\nSee more:\n1. `JSCContext`\n2. `JSCFunction`\n3. `JSCPrimative`\n4. `JSCObject`\n5. `JSObjectUtils`","summary":"<p>According to architecture of WebKit2GTK, JavaScript code runs in a separeted process called Render Process.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"function(arg_name)-macro","html_id":"function(arg_name)-macro","name":"function","doc":"This macro initializes an anonymous JavaScript function.\n\n```\nfunc = function p do\n  puts typeof(p) # => Array(JSCFunction|JSCObject|JSCPrimative)\n  JSCPrimative.new true # JavaScript's true\n  # Because this block expects a union of (JSCFunction|JSCObject|JSCPrimative) returned.\nend","summary":"<p>This macro initializes an anonymous JavaScript function.</p>","abstract":false,"args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""}],"args_string":"(arg_name)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_extension.cr#L73","def":{"name":"function","args":[{"name":"arg_name","doc":null,"default_value":"","external_name":"arg_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    JSCFunction.new JSCFunction::CallBack.new \n{ |\n{{ arg_name }}\n|\n      \n{{ yield }}\n\n    }\n  \n"}},{"id":"initialize_extension-macro","html_id":"initialize_extension-macro","name":"initialize_extension","doc":"Entry point of a Web Extension shared library","summary":"<p>Entry point of a Web Extension shared library</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_extension.cr#L42","def":{"name":"initialize_extension","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    fun webkit_web_extension_initialize(\n%ext\n : LibWebKit2Extension::WebKitWebExtension)\n      GC.init\n      \n%arg\n = \"TheEEs<visualbasic2013@hotmail.com>\"\n      \n%args\n = StaticArray(UInt8*, 1).new(\n%arg\n.to_unsafe)\n      LibCrystalMain.__crystal_main(1, \n%args\n.to_unsafe)\n      puts \"Webkit Extension initialized\".colorize(:green)\n      LibWebKit.connect_signal \n%ext\n, \"page-created\", (->(\n%ext\n : Void*, \n%page\n : Void*, \n%data\n : Void*) \n{\n        puts \"WebkitWebPage is loaded\".colorize(:green)  \n        \n%script_world\n = LibWebKit2Extension.get_default_script_world\n        \n%main_frame\n = LibWebKit2Extension.get_main_frame(\n%page\n)\n        LibWebKit.connect_signal \n%script_world\n, \"window-object-cleared\", (->(\n%w\n : LibWebKit2Extension::WebKitScriptWorld, \n%p\n : LibWebKit2Extension::WebKitWebPage, \n%f\n : LibWebKit2Extension::WebKitWebFrame) \n{\n          puts \"window object is ready\".colorize(:green)\n          \n%context\n = LibWebKit2Extension.get_global_js_context \n%f\n, LibWebKit2Extension.get_default_script_world\n          ::JSCPrimative.global_context = \n%context\n\n          ::JSCFunction.global_context = \n%context\n \n          ::JSCContext.global_context = \n%context\n\n          \n{{ yield }}\n\n        }), nil, nil, LibWebKit::GtkGConnectFlags::All\n      }), nil, nil, LibWebKit::GtkGConnectFlags::All\n    \nend\n  \n"}}],"types":[]},{"html_id":"github.com/TheEEs/alizarin/WebView","path":"WebView.html","kind":"class","full_name":"WebView","name":"WebView","abstract":false,"superclass":{"html_id":"github.com/TheEEs/alizarin/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/TheEEs/alizarin/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/TheEEs/alizarin/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"web_view.cr","line_number":5,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `WebView` is a class which represents a WebKit2GTK browser window.\nIt allows developers to display HTML contents, execute JavaScript code.","summary":"<p>A <code><a href=\"WebView.html\">WebView</a></code> is a class which represents a WebKit2GTK browser window.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes a new instance of `WebView`","summary":"<p>Initializes a new instance of <code><a href=\"WebView.html\">WebView</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L16","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[]=(name:String,value)-instance-method","html_id":"[]=(name:String,value)-instance-method","name":"[]=","doc":"Set properties for WebKitSettings. See [WebKitSettings](https://webkitgtk.org/reference/webkit2gtk/stable/WebKitSettings.html).\n\n```\nwebview[\"enable-developer-extras\"] = true    # This allows developers to use WebInspector(DevTools)\nwebview[\"enable-html5-local-storage\"] = true # This enables localStorage features in JavaScript\n```","summary":"<p>Set properties for WebKitSettings.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(name : String, value)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L64","def":{"name":"[]=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.g_object_set(@settings, name, value, nil)"}},{"id":"default_size(width:UInt32,height:UInt32)-instance-method","html_id":"default_size(width:UInt32,height:UInt32)-instance-method","name":"default_size","doc":"Set default size of browser window\n\n```\nwebview.default_size 800, 600\n```","summary":"<p>Set default size of browser window</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(width : UInt32, height : UInt32)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L45","def":{"name":"default_size","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.set_default_window_size(@window, width, height)"}},{"id":"execute_javascript(js_code:String)-instance-method","html_id":"execute_javascript(js_code:String)-instance-method","name":"execute_javascript","doc":"Asynchronously executes JavaScriptCode. After *js_code* has been successfully executed, the callback passed to `#when_script_finished` will be called.\n\n```\nwebview.when_document_loaded |w|\n  w.execute_javascript \"alert('LOL')\"\nend\n```","summary":"<p>Asynchronously executes JavaScriptCode.</p>","abstract":false,"args":[{"name":"js_code","doc":null,"default_value":"","external_name":"js_code","restriction":"String"}],"args_string":"(js_code : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L147","def":{"name":"execute_javascript","args":[{"name":"js_code","doc":null,"default_value":"","external_name":"js_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.eval_js(@browser, js_code, nil, LibWebKit::GAsyncReadyCallback.new do |object, result, user_data|\n  res = LibWebKit.script_finish_result(object, result, nil)\n  if res.null?\n    puts((\"JavaScript execution has cause error(s)\".colorize(:red)).on(:black))\n    return\n  end\n  jsc_value = LibWebKit.get_jsc_from_js_result(res)\n  webview = Box(WebView).unbox(user_data)\n  webview.run_script_finish_callback(jsc_value)\nend, Box.box(self))"}},{"id":"extension_dir:String-instance-method","html_id":"extension_dir:String-instance-method","name":"extension_dir","doc":"Get extension directory","summary":"<p>Get extension directory</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L13","def":{"name":"extension_dir","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@extension_dir"}},{"id":"extension_dir=(directory:String)-instance-method","html_id":"extension_dir=(directory:String)-instance-method","name":"extension_dir=","doc":"Specifies *directory* where the webview should look for WebExtension.\n\n```\nwebview = WebView.new\nwebview.extension_dir = \"<your-path-to-directory-which-contains-web-extensions>\"\n```\nNOTE: If this method is used, it should be executed as soon as possible. A good practice is to place it right after `.new`.","summary":"<p>Specifies <em>directory</em> where the webview should look for WebExtension.</p>","abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"}],"args_string":"(directory : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L32","def":{"name":"extension_dir=","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@extension_dir = directory\nLibWebKit.connect_signal(LibWebKit.get_default_web_context, \"initialize-web-extensions\", (->(ctx : ::Pointer(Void), data : ::Pointer(Void), c : ::Pointer(Void)) do\n  default_ctx = LibWebKit.get_default_web_context\n  LibWebKit.set_extensions_directory(default_ctx, ctx.as(::Pointer(UInt8)))\nend), @extension_dir.to_unsafe, nil, LibWebKit::GtkGConnectFlags::All)\n"}},{"id":"load_html(html:String,base_url:String?=nil)-instance-method","html_id":"load_html(html:String,base_url:String?=nil)-instance-method","name":"load_html","doc":"Loads raw *html*\n\nIf *base_url* is provided and not nil, all relative paths in *html* will relative to *base_url*.\nAll absolute paths will also have to start with *base_url* because of security reasons. If not, Web Process might crash.","summary":"<p>Loads raw <em>html</em></p>","abstract":false,"args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"},{"name":"base_url","doc":null,"default_value":"nil","external_name":"base_url","restriction":"String | ::Nil"}],"args_string":"(html : String, base_url : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L81","def":{"name":"load_html","args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"},{"name":"base_url","doc":null,"default_value":"nil","external_name":"base_url","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.webview_load_html(@browser, html, base_url)"}},{"id":"load_url(url:String)-instance-method","html_id":"load_url(url:String)-instance-method","name":"load_url","doc":"Loads a webpage located at *url*\n\n```\nwebview.load_url \"https://google.com\"\n```","summary":"<p>Loads a webpage located at <em>url</em></p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L73","def":{"name":"load_url","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.webview_load_uri(@browser, url)"}},{"id":"on_close(&b:Callback)-instance-method","html_id":"on_close(&amp;b:Callback)-instance-method","name":"on_close","doc":"Specifies callback called when browser window close. Usually useds to close process.\n\n```\nwebview.on_close do |webview|\n  puts \"WebView(#{webview}) is going to shutdown\"\n  exit 0\nend\n```","summary":"<p>Specifies callback called when browser window close.</p>","abstract":false,"args":[],"args_string":"(&b : Callback)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L93","def":{"name":"on_close","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Callback"},"return_type":"","visibility":"Public","body":"@box = Box.box({self, b})\nLibWebKit.connect_signal(@browser, \"destroy\", ->(data1 : ::Pointer(Void), data2 : ::Pointer(Void), data3 : ::Pointer(Void)) do\n  data = Box(::Tuple(WebView, Callback)).unbox(data1)\n  webview = data[0]\n  callback = data[1]\n  webview.destroy_browser\n  callback.call(webview)\nend, @box, nil, LibWebKit::GtkGConnectFlags::All)\n"}},{"id":"run-instance-method","html_id":"run-instance-method","name":"run","doc":"Runs browser window. This method puts the main process into a loop which blocks until callback specified in `#on_close` called.\n\n```\nwebview.run\nputs \"Good bye\" # This line will only be executed after webview main loop is destroyed.\n```","summary":"<p>Runs browser window.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L116","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.show_window(@window)\nLibWebKit.start_gtk_main_loop\n"}},{"id":"run(blocking:Bool,&block:WebView->Nil)-instance-method","html_id":"run(blocking:Bool,&amp;block:WebView-&gt;Nil)-instance-method","name":"run","doc":"Run browser window. This method receives a *block* which lets developers do some logics at each webview's iteration.\nIf *blocking* is truthy, *block* will only be called when an iteration is done.\n\n```\ncount = 0\nwebview.run blocking: false do |webview|\n#If blocking: set to `true`. This printing process will be significally slowed down.\n#This is because `#run(blocking,&block)` has to wait for the current iteration finish.\n  puts a\n  a += 1\nend\n```","summary":"<p>Run browser window.</p>","abstract":false,"args":[{"name":"blocking","doc":null,"default_value":"","external_name":"blocking","restriction":"Bool"}],"args_string":"(blocking : Bool, &block : WebView -> Nil)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L133","def":{"name":"run","args":[{"name":"blocking","doc":null,"default_value":"","external_name":"blocking","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(WebView -> Nil)"},"return_type":"","visibility":"Public","body":"LibWebKit.show_window(@window)\nwhile LibWebKit.start_gtk_main_iter(blocking)\n  block.call(self)\nend\n"}},{"id":"show_inspector-instance-method","html_id":"show_inspector-instance-method","name":"show_inspector","doc":"Shows WebKit's WebInspector.","summary":"<p>Shows WebKit's WebInspector.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L105","def":{"name":"show_inspector","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"inspector = LibWebKit.get_web_inspector(@browser)\nLibWebKit.show_inspector(inspector)\n"}},{"id":"title=(title:String)-instance-method","html_id":"title=(title:String)-instance-method","name":"title=","doc":"Set title of browser window\n\n```\nwebview.title = \"Alizarin App\"\n```","summary":"<p>Set title of browser window</p>","abstract":false,"args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"}],"args_string":"(title : String)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L54","def":{"name":"title=","args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibWebKit.set_title(@window, title)"}},{"id":"when_document_loaded(&b:WebView->Nil)-instance-method","html_id":"when_document_loaded(&amp;b:WebView-&gt;Nil)-instance-method","name":"when_document_loaded","doc":"Specifies a callback which will be called after webview has fully loaded a webpage.\nThis is equal to JQuery's `$(window).ready`.\nThis method is the right place to do some logic, for example `#execute_javascript`.\n\n```\nwebview.on_document_loaded do |webview|\n  webview.execute_javascript \"alert('Hello')\"\nend\n```","summary":"<p>Specifies a callback which will be called after webview has fully loaded a webpage.</p>","abstract":false,"args":[],"args_string":"(&b : WebView -> Nil)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L187","def":{"name":"when_document_loaded","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"(WebView -> Nil)"},"return_type":"","visibility":"Public","body":"@document_loaded_callback = Box.box({self, b})\nLibWebKit.connect_signal(@browser, \"load-changed\", LibWebKit::GtkCallback.new do |udata, event, webview|\n  if event.address == 3\n    data = Box(::Tuple(WebView, (WebView -> Nil))).unbox(udata)\n    webview = data[0]\n    callback = data[1]\n    callback.call(webview)\n  end\nend, @document_loaded_callback, nil, LibWebKit::GtkGConnectFlags::All)\n"}},{"id":"when_script_finished(&b:JSC::JSValue->Nil)-instance-method","html_id":"when_script_finished(&amp;b:JSC::JSValue-&gt;Nil)-instance-method","name":"when_script_finished","doc":"Specifies a callback which will be called each time a script executed by `#execute_javascript` finishes.\nThe callback *b* receives a `Pointer(Void)` as parameter that points to result of the executed JS code.\nFor example:\n\n```\nwebview.when_script_finished do |js_value|\n  puts JSC.is_number jsc_value\nend\nwebview.execute_javascript \"1 + 2\"          # => js_value in the block above should be true\nwebview.execute_javascript \"alert('Hello')\" # => js_value should be false\n```\nNOTE: Because the passed block receives a Pointer as its parameter, it's considered unsafe. It's not recommended to manipulate this pointer directly\nusing JavaScriptCore API. Uses `WebExtension` instead.","summary":"<p>Specifies a callback which will be called each time a script executed by <code><a href=\"WebView.html#execute_javascript(js_code:String)-instance-method\">#execute_javascript</a></code> finishes.</p>","abstract":false,"args":[],"args_string":"(&b : JSC::JSValue -> Nil)","source_link":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr#L174","def":{"name":"when_script_finished","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"(JSC::JSValue -> Nil)"},"return_type":"","visibility":"Public","body":"@script_finish_callback = Box.box(b)"}}],"macros":[],"types":[{"html_id":"github.com/TheEEs/alizarin/WebView/Callback","path":"WebView/Callback.html","kind":"alias","full_name":"WebView::Callback","name":"Callback","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"web_view.cr","line_number":10,"url":"https://github.com/TheEEs/alizarin/blob/46cf1025b79922d67a0b90386076db11dc056f43/src/web_view.cr"}],"repository_name":"github.com/TheEEs/alizarin","program":false,"enum":false,"alias":true,"aliased":"Proc(WebView, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/TheEEs/alizarin/WebView","kind":"class","full_name":"WebView","name":"WebView"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}})